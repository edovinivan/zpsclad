/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tfwork.zpsclad.forms;

import com.tfwork.zpsclad.forms.utils.LoadFiles;
import com.tfwork.zpsclad.forms.utils.RWJsonFile;
import com.google.gson.Gson;
import com.tfwork.zpsclad.forms.utils.ModelWorkers;
import com.tfwork.zpsclad.forms.utils.Worker;
import com.tfwork.zpsclad.forms.utils.SetupKoefficient;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author ivan
 */
public class ZPScladMain extends javax.swing.JFrame {

    /**
     * Creates new form ZPScladMain
     */
    public ZPScladMain() {
        initComponents();
    }

    List<Worker> listWorker = new ArrayList<>();  
    SetupKoefficient setupKoefficient;
    private final String FILE_SETUP = "setup.json";
    /**
     * Выполнялись или нет действия с изменением данных. Нужно или нет сохранять в файл
     */
    private boolean WRITE_TO_FILE = false;
    
    ModelWorkers model = new ModelWorkers();
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Расчет зп склада v1.0");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel.png"))); // NOI18N
        jButton1.setText("Выход");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/document.png"))); // NOI18N
        jButton4.setText("Новый расчет");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.png"))); // NOI18N
        jButton5.setText("Сохранить");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/forward.png"))); // NOI18N
        jButton6.setText("Загрузить");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database.png"))); // NOI18N
        jButton2.setText("HOPE");
        jButton2.setToolTipText("Загрузить данные из файла выгрузки HOPE");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vcard.png"))); // NOI18N
        jButton3.setText("СМАРТ");
        jButton3.setToolTipText("Загрузить данные из файла выгрузки СМАРТ");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pinion.png"))); // NOI18N
        jButton7.setText("Параметры");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(26);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        setLocationRelativeTo(null);
        //загрузим настройки если они есть
        try {            
            File file = new File(FILE_SETUP);
            //если файла настроек нет, то загрузин настройки по умолчанию
            if(!file.canExecute())
            {
                JSetupKoeff jSetupKoeff = new JSetupKoeff(null, true);
                if(jSetupKoeff.readAllData()){
                    setupKoefficient = jSetupKoeff.getSetupKoefficient();                       
                }                         
                return;
            }
            //если файл есть
            List<String> ls = Files.readAllLines(file.toPath(), Charset.forName("cp1251"));
            Gson gson = new Gson();
            // настройки коэффициентов
            setupKoefficient = gson.fromJson(ls.get(0), SetupKoefficient.class);
            ls.stream().skip(1).forEach(x->{
                listWorker.add(gson.fromJson(x, Worker.class));
            });
            
            
        } catch (IOException ex) {
            Logger.getLogger(ZPScladMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        model.setData(listWorker);
        jTable1.setModel(model);        
        jTable1.setShowGrid(true);                    
        jTable1.getTableHeader().setReorderingAllowed(false);
        
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
        if (WRITE_TO_FILE) {
            if (JOptionPane.showConfirmDialog(null, "Сохранить расчет?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) {
                RWJsonFile rwj = new RWJsonFile();
                rwj.writeSetupToFile(FILE_SETUP, setupKoefficient, listWorker);
            }
        }
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Загрузить файл HOPE
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfipeopen = new JFileChooser();
        if(jfipeopen.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            LoadFiles loadfiles = new LoadFiles();
            if(loadfiles.loadFileHope(jfipeopen.getSelectedFile().getAbsolutePath())){
                WRITE_TO_FILE = true;
                loadfiles.getListWorker().stream().forEach(s->{                    
                    List<Worker> lw = listWorker.stream().filter(x -> x.getKod()== s.getKod()).collect(Collectors.toList());
                    //если элемент есть
                    if(!lw.isEmpty()){
                        lw.get(0).setControlor_pozic_hope(s.getControlor_pozic_hope());
                        lw.get(0).setControlor_standart_hope(s.getControlor_standart_hope());
                        lw.get(0).setPicker_pozic_hope(s.getPicker_pozic_hope());
                        lw.get(0).setPicker_standart_hope(s.getPicker_standart_hope());
                        //lw.get(0).setName(s.getName());
                    }else{
                        listWorker.add(s);
                    }
                });
                //listWorker.forEach(s -> System.out.println(s.toString()));
            }                
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Создать новый расчет
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите создать новый расчет?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) {
            WRITE_TO_FILE = true;
            listWorker = new ArrayList<>();
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    // открыть параметры и коэффициенты для расчета
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        JSetupKoeff jSetupKoeff = new JSetupKoeff(null, true);
        jSetupKoeff.setData(setupKoefficient);
        jSetupKoeff.setVisible(true);        
        if (jSetupKoeff.getResult()) {
            WRITE_TO_FILE = true;
            setupKoefficient = jSetupKoeff.getSetupKoefficient();           
        }
                
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите сохранить расчет в файл?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) {
            Gson gson = new Gson();
            try (FileWriter filew = new FileWriter("d:\\file.txt")) {
                gson.toJson(setupKoefficient, filew);
                filew.write("\n");
                setupKoefficient.setWork_mont(2023);
                gson.toJson(setupKoefficient, filew);
            } catch (IOException ex) {
                Logger.getLogger(JSetupKoeff.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            // TODO add your handling code here:
            File file = new File("d:\\file.txt");
            List<String> ls = Files.readAllLines(file.toPath());
            Gson gson = new Gson();
            setupKoefficient = gson.fromJson(ls.get(0), SetupKoefficient.class);
        } catch (IOException ex) {
            Logger.getLogger(ZPScladMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
       // jButton1ActionPerformed(null);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        jButton1ActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
        // TODO add your handling code here:
        if(jTable1.getRowCount()>0){
            int h = jTable1.getWidth()-840;
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(h);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(60);
        }
    }//GEN-LAST:event_jTable1ComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ZPScladMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ZPScladMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ZPScladMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ZPScladMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ZPScladMain().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

   
}
